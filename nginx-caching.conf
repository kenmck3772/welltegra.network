# Well-Tegra Nginx Caching Configuration
#
# This configuration optimizes caching headers for better performance
# Place this in your nginx server block or include it from nginx.conf
#
# Performance improvements:
# - Browser caching reduces repeat requests by 60-80%
# - Gzip compression reduces transfer sizes by 70-90%
# - Proper ETags enable efficient cache validation
#
# Usage:
#   include /path/to/nginx-caching.conf;

# ==================================================
# GZIP COMPRESSION
# ==================================================

# Enable gzip compression
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/x-javascript
    application/xml
    application/xml+rss
    application/xhtml+xml
    application/x-font-ttf
    application/x-font-opentype
    application/vnd.ms-fontobject
    image/svg+xml
    image/x-icon
    application/rss+xml
    application/atom_xml;

# Don't compress small files (< 1KB)
gzip_min_length 1000;

# Disable gzip for IE6
gzip_disable "msie6";

# ==================================================
# BROTLI COMPRESSION (if available)
# ==================================================

# brotli on;
# brotli_comp_level 6;
# brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap;

# ==================================================
# STATIC ASSET CACHING
# ==================================================

# Cache static assets aggressively (1 year)
location ~* \.(jpg|jpeg|png|gif|ico|webp|svg|woff|woff2|ttf|eot|otf)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    access_log off;
}

# Cache CSS and JavaScript (1 month, revalidate)
location ~* \.(css|js)$ {
    expires 1M;
    add_header Cache-Control "public, must-revalidate";
    access_log off;
}

# Cache videos (6 months)
location ~* \.(mp4|webm|ogg)$ {
    expires 6M;
    add_header Cache-Control "public, immutable";
    access_log off;
}

# Cache JSON data files (1 hour, must revalidate)
location ~* \.json$ {
    expires 1h;
    add_header Cache-Control "public, must-revalidate";
}

# ==================================================
# HTML CACHING (SHORT TTL)
# ==================================================

# Don't cache HTML by default (or very short cache)
location ~* \.html?$ {
    expires 5m;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
}

# ==================================================
# SECURITY HEADERS
# ==================================================

# Add security headers
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# ==================================================
# CLOUDFLARE INTEGRATION
# ==================================================

# Trust Cloudflare IPs for real visitor IP
# set_real_ip_from 103.21.244.0/22;
# set_real_ip_from 103.22.200.0/22;
# set_real_ip_from 103.31.4.0/22;
# set_real_ip_from 104.16.0.0/13;
# set_real_ip_from 104.24.0.0/14;
# set_real_ip_from 108.162.192.0/18;
# set_real_ip_from 131.0.72.0/22;
# set_real_ip_from 141.101.64.0/18;
# set_real_ip_from 162.158.0.0/15;
# set_real_ip_from 172.64.0.0/13;
# set_real_ip_from 173.245.48.0/20;
# set_real_ip_from 188.114.96.0/20;
# set_real_ip_from 190.93.240.0/20;
# set_real_ip_from 197.234.240.0/22;
# set_real_ip_from 198.41.128.0/17;
# real_ip_header CF-Connecting-IP;

# ==================================================
# OPTIMIZATION SETTINGS
# ==================================================

# Enable sendfile for faster file transfers
sendfile on;

# Enable TCP optimizations
tcp_nopush on;
tcp_nodelay on;

# Keep-alive timeout
keepalive_timeout 65;
keepalive_requests 100;

# Buffer sizes
client_body_buffer_size 128k;
client_max_body_size 100M;
client_header_buffer_size 1k;
large_client_header_buffers 4 32k;

# ==================================================
# EXAMPLE SERVER BLOCK
# ==================================================

# server {
#     listen 80;
#     server_name welltegra.com www.welltegra.com;
#     root /var/www/welltegra.network;
#     index index.html;
#
#     # Include caching rules
#     include /etc/nginx/conf.d/nginx-caching.conf;
#
#     # Main location
#     location / {
#         try_files $uri $uri/ /index.html;
#     }
#
#     # API proxy (if needed)
#     location /api/ {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

# ==================================================
# PERFORMANCE TESTING
# ==================================================

# Test your configuration:
#   nginx -t
#
# Reload nginx:
#   sudo systemctl reload nginx
#
# Check headers in browser DevTools Network tab or:
#   curl -I https://welltegra.com/assets/logo.webp
#
# Expected headers:
#   Cache-Control: public, immutable
#   Expires: [date 1 year in future]
#   Content-Encoding: gzip
